@model TraineeHelper.ViewModels.TraineeContext

@{
    ViewBag.Title = "PersonalTraineeProfile";
}

<h2>PersonalTraineeProfile</h2>

@using (Html.BeginForm("UpdateTraineeProfile","Profile", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TraineeContext</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.HiddenFor(model => Model.UserType)
            @Html.HiddenFor(model => Model.UserName)
            @Html.HiddenFor(model => Model.Password)
            @Html.HiddenFor(model => Model.Email)
            @Html.HiddenFor(Model => Model.MedicalCondition.FatPercent)
            @Html.HiddenFor(Model => Model.MedicalCondition.Height)
            @Html.HiddenFor(Model => Model.MedicalCondition.Weight)
            @Html.HiddenFor(Model => Model.MedicalCondition.MuscleMass)
            @Html.HiddenFor(model => model.Achievements)
            @Html.HiddenFor(model => model.PhoneVisibility)
            @Html.HiddenFor(model => model.UserVisibility)
            @Html.HiddenFor(model => model.IsActive)
            @Html.HiddenFor(model => model.Created)
            @Html.HiddenFor(model => model.Modified)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

       

    <div class="form-group">
        @Html.Label("Favorite Exercise", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FavouriteExercise.ExerciseName, new { @class = "control-label col-md-2"})
            @Html.ValidationMessageFor(model => model.FavouriteExercise.ExerciseName, "", new { @class = "text-danger" })
        </div>
    </div>

     <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
             @Html.RadioButtonFor(model => model.Gender, "Female", new { @checked = true }) Female
             @Html.RadioButtonFor(model => model.Gender, "Male", new { @checked = true }) Male
         </div>
     </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location.Country, htmlAttributes: new { @class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Location.Country, new { @class = "control-label col-md-2"})
            @Html.ValidationMessageFor(model => model.Location.Country, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Location.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Location.City, new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.Location.City, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <input type="button" value="MedicalCondition" onclick="window.location.href='/Profile/MedicalCondition' " class="btn btn-default" />
            </div>
        </div>
    </div>
}



<div>
    @Html.ActionLink("Back to List", "Index","Home")
</div>



