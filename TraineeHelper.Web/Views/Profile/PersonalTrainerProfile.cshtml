@model TraineeHelper.ViewModels.TrainerContext

@{
    ViewBag.Title = "PersonalTrainerProfile";
}


<h2>PersonalTrainerProfile</h2>

@using (Html.BeginForm("UpdateTrainerProfile", "Profile"))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TrainerContext</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

  
        @foreach(var image in Model.imagesList)
        {

                <img src="@Url.Content("~/"+ image)" alt="" />
           
        }



        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reputation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reputation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reputation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExperienceYears, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExperienceYears, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExperienceYears, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.RadioButtonFor(model => model.Gender, "Female") Female
            @Html.RadioButtonFor(model => model.Gender, "Male") Male
            <div class="col-md-10">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location.Country, new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.Location.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location.City, new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.Location.City, "", new { @class = "text-danger" })
            </div>
        </div>
       
         <div class="form-group">
            @Html.Label("Expertise:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @foreach (var value in Model.ExpertisesOptions)
                {
                    bool isTrainerExpertee = Model.Expertise.Contains(value.Id); 
                    <label>@Html.DisplayFor(modelItem => value.ExpertiseName)</label>
                    <input type="checkbox" id="expertisesCheckBoxId" name="selectedExpertises" checked="@isTrainerExpertee" value="@value.Id" />
                }
             </div>
          </div>

         
         
        @Html.HiddenFor(mode => Model.Expertise)

        
             

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

        @Html.HiddenFor(model => model.Email)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.Modified)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Password)
        @Html.HiddenFor(model => model.UserName)
        @Html.HiddenFor(model => model.PhoneVisibility)
        @Html.HiddenFor(model => model.UserType)
        @Html.HiddenFor(model => model.UserVisibility)
        
    </div>
}

<div class="form-group">
    <div class="col-md-12">
        <form method="post" action="/api/Account/UploadImage?userId=@Model.Id"  enctype="multipart/form-data">
            <input type="file" title="upload" name="userImage" id="userImage" />
            <input type="submit" value="Upload file" />
        </form>
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>
